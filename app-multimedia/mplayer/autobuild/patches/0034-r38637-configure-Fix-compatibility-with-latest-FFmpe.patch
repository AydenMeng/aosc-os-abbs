From 16b5d271e3657a5f9da578e700bad33810a53d34 Mon Sep 17 00:00:00 2001
From: Mingcong Bai <jeffbai@aosc.io>
Date: Wed, 4 Sep 2024 23:41:03 +0800
Subject: [PATCH 34/35] [r38637] configure: Fix compatibility with latest
 FFmpeg

Also add partial tcc support and update macOS support
to work better on modern systems.

(From upstream SVN r38637)
---
 configure | 20 +++++++++++++-------
 1 file changed, 13 insertions(+), 7 deletions(-)

diff --git a/configure b/configure
index db5b3ba..b8b73c2 100755
--- a/configure
+++ b/configure
@@ -1652,7 +1652,7 @@ libavprotocols=$(echo $libavprotocols_all)
 libavfilters=$(echo $libavfilters_all)
 
 libavdecoders=$(filter_out_component decoder 'LIB[A-Z0-9_]* [A-Z0-9]*_QSV [A-Z0-9]*_MMAL [A-Z0-9]*_MEDIACODEC [A-Z0-9]*_CUVID [A-Z0-9_]*_AT [A-Z0-9]*_RKMPP [A-Z0-9]*_V4L2M2M')
-libavencoders=$(filter_out_component encoder 'LIB[A-Z0-9_]* [A-Z0-9]*_QSV [A-Z0-9]*_MMAL [A-Z0-9]*_MEDIACODEC NVENC[A-Z0-9_]* AV1_NVENC[A-Z0-9_]* H264_NVENC[A-Z0-9_]* HEVC_NVENC[A-Z0-9_]* HAP [A-Z0-9]*_VIDEOTOOLBOX [A-Z0-9]*_VAAPI [A-Z0-9]*_OMX [A-Z0-9_]*_AT [A-Z0-9]*_V4L2M2M [A-Z0-9]*_AMF [A-Z0-9]*_MF')
+libavencoders=$(filter_out_component encoder 'LIB[A-Z0-9_]* [A-Z0-9]*_QSV [A-Z0-9]*_MMAL [A-Z0-9]*_MEDIACODEC NVENC[A-Z0-9_]* AV1_NVENC[A-Z0-9_]* H264_NVENC[A-Z0-9_]* HEVC_NVENC[A-Z0-9_]* HAP [A-Z0-9]*_VIDEOTOOLBOX [A-Z0-9]*_VAAPI [A-Z0-9]*_OMX [A-Z0-9_]*_AT [A-Z0-9]*_V4L2M2M [A-Z0-9]*_AMF [A-Z0-9]*_MF' [A-Z0-9_]*D3D12VA[A-Z0-9_]*)
 libavbsfs=$(filter_out_component bsf 'TRACE_HEADERS [A-Z0-9_]*_METADATA H264_REDUNDANT_PPS FILTER_UNITS')
 libavdemuxers=$(filter_out_component demuxer 'AVISYNTH LIB[A-Z0-9_]* REDIR VAPOURSYNTH')
 libavmuxers=$(filter_out_component muxer 'CHROMAPRINT LIB[A-Z0-9_]* RTP RTSP SAP')
@@ -1777,6 +1777,14 @@ else
       echores "$cc_version"
       break
     fi
+    if test "$cc_name_tmp" = "tcc"; then
+      cc_name=$cc_name_tmp
+      echocheck "$_cc version"
+      cc_vendor=tcc
+      cc_version=$($_cc -dumpversion 2>&1)
+      echores "$cc_version"
+      break
+    fi
     if $_cc -v 2>&1 | grep -q "clang"; then
       echocheck "$_cc version"
       cc_vendor=clang
@@ -1952,10 +1960,6 @@ if wine ; then
   libs_mplayer="$libs_mplayer -lshell32"
 fi
 
-if darwin && test "$cc_vendor" != "clang" ; then
-  extra_cflags="-falign-loops=16 -shared-libgcc $extra_cflags"
-fi
-
 TMPEXE="$mplayer_tmpdir/tmp$_exesuf"
 
 echocheck "working compiler"
@@ -2559,7 +2563,8 @@ case "$host_arch" in
     arch='aarch64'
     iproc='aarch64'
     if test "$_runtime_cpudetection" = no ; then
-      cflag_check -march=native -mcpu=native -mfpu=auto && _march="-march=native -mcpu=native -mfpu=auto"
+      # some compilers now warn that mfpu=auto is unused
+      cflag_check -march=native -mcpu=native -mfpu=auto && _march="-march=native -mcpu=native -mfpu=auto" && cflag_check -Wno-unused-command-line-argument && _march="$_march -Wno-unused-command-line-argument"
     fi
     ;;
 
@@ -6416,7 +6421,7 @@ fi
 echocheck "VCD support"
 if test "$_vcd" = auto; then
   _vcd=no
-  if linux || freebsd || netbsd || openbsd || dragonfly || bsdos || darwin || sunos || os2; then
+  if linux || freebsd || netbsd || openbsd || dragonfly || bsdos || sunos || os2; then
     _vcd=yes
   elif mingw32; then
   header_check ddk/ntddcdrm.h && _vcd=yes
@@ -8960,6 +8965,7 @@ CONFIG_HUFFYUVENCDSP = yes
 CONFIG_IAMFDEC = yes
 CONFIG_IAMFENC = yes
 CONFIG_IDCTDSP = yes
+CONFIG_ISO_WRITER = yes
 CONFIG_TPELDSP = yes
 CONFIG_HUFFMAN = yes
 CONFIG_MDCT15  = yes
-- 
2.46.0

