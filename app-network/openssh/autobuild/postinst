_match_key() {
	[ -e "/etc/ssh/$1" ] || return 1
	local sha1
	_key_sha1="$(sha1sum "/etc/ssh/$1" | cut -d ' ' -f 1)"
	grep -q "$_key_sha1" "/usr/share/doc/openssh/revoked-keys/$1"
}

_match_all_keys() {
	for i in \
	    ssh_host_dsa_key ssh_host_dsa_key.pub ssh_host_ecdsa_key \
	    ssh_host_ecdsa_key.pub ssh_host_ed25519_key \
	    ssh_host_ed25519_key.pub ssh_host_rsa_key \
	    ssh_host_rsa_key.pub; do
		if _match_key $i; then
			return 0
		fi
	done
	return 1
}

if _match_all_keys; then
# Certain system media, images, and tarballs are known to contain leaked host
# keys. Revoke them.
	. /usr/share/debconf/confmodule
	db_get openssh/leaked_keys_20240913

	/usr/bin/rm -fv \
		/etc/ssh/ssh_host_dsa_key \
		/etc/ssh/ssh_host_dsa_key.pub \
		/etc/ssh/ssh_host_ecdsa_key \
		/etc/ssh/ssh_host_ecdsa_key.pub \
		/etc/ssh/ssh_host_ed25519_key \
		/etc/ssh/ssh_host_ed25519_key.pub \
		/etc/ssh/ssh_host_rsa_key \
		/etc/ssh/ssh_host_rsa_key.pub
	/usr/bin/ssh-keygen -A
fi

echo -e "Checking whether systemd units need to be reload..."
if [[ $(systemctl show sshd --property=NeedDaemonReload | cut -d= -f2) == "yes" ]]; then
	echo "Reloading systemd units ..."
	systemctl daemon-reload
	echo "Restarting sshd service ..."
	systemctl try-restart sshd
else
	echo "Nothing needs reloading."
fi

